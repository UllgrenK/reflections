What happens when you initialize a repository? Why do you need to do it?
Git starts tracking the versions. It's needed to use git.

How is the staging area different from the working directory and the repository? What value do you think it offers?
Working dir has all files on my local computer. Repository is the collection of files that the versions are tracked and will be shared with others. Repository has the commits. Staging helps to bridge the changes I've made on my local machine to the commit to the repository.

How can you use the staging area to make sure you have one commit per logical change?
I only add the right files to the staging area.

What are some situations when branches would be helpful in keeping your history organized? How would branches help?
When developing a bigger feature or experiments, I want to create a new branch for each.

How do the diagrams help you visualize the branch structure?
Because they are visual representations of the branches and commits.

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?
Result is one single version of the file, with commit history of the both. It's easier to think of the master branch and divert and merge to it, than just freely merge.

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges manually?
Automatic merge saves a lot of time and effort in cases when it's clear that there isn't any conflict.


